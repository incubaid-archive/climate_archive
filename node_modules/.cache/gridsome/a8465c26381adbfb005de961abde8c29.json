{"remainingRequest":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/src/templates/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/src/templates/Search.vue","mtime":1660040114148},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":["\r\nimport SearchListItem from \"~/components/custom/Cards/SearchListItem.vue\";\r\n\r\nexport default {\r\n  metaInfo: {\r\n    title: \"Search\",\r\n  },\r\n  data: () => ({\r\n    q: \"\",\r\n    objects: {},\r\n    loading: true,\r\n  }),\r\n  computed: {\r\n    searchResults() {\r\n      const searchTerm = this.q;\r\n      if (!searchTerm || searchTerm.length < 3) return [];\r\n      var searchRes = this.$search.search({ query: searchTerm, limit: 100 });\r\n      var result = [];\r\n      for (var i = 0; i < searchRes.length; i++) {\r\n        var item = searchRes[i];\r\n        result.push({ node: this.objects[item.path] });\r\n      }\r\n      return result;\r\n    },\r\n    contentHeight() {\r\n      if (process.isClient) {\r\n        return window.innerHeight - 128;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.q = new URL(location.href).searchParams.get(\"query\");\r\n\r\n    for (var i = 0; i < this.$page.projects.edges.length; i++) {\r\n      var item = this.$page.projects.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    for (var i = 0; i < this.$page.people.edges.length; i++) {\r\n      var item = this.$page.people.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    for (var i = 0; i < this.$page.blogs.edges.length; i++) {\r\n      var item = this.$page.blogs.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    for (var i = 0; i < this.$page.markdowns.edges.length; i++) {\r\n      var item = this.$page.markdowns.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    this.loading = false;\r\n  },\r\n  components: {\r\n    SearchListItem,\r\n  },\r\n};\r\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";AA6HA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/templates","sourcesContent":["<template>\r\n  <Layout>\r\n    <div\r\n      class=\"container sm:pxi-0 mx-auto\"\r\n      :style=\"{ 'min-height': contentHeight + 'px' }\"\r\n    >\r\n      <img\r\n        v-if=\"loading\"\r\n        class=\"m-auto\"\r\n        src=\"/img/loader.gif\"\r\n        alt=\"\"\r\n      />\r\n      <div\r\n        v-if=\"searchResults.length > 0\"\r\n        class=\"flex flex-wrap with-large pt-8 pb-8 mx-4 sm:-mx-4\"\r\n      >\r\n        <SearchListItem\r\n          v-for=\"edge in searchResults\"\r\n          :key=\"edge.node.id\"\r\n          :record=\"edge.node\"\r\n        />\r\n      </div>\r\n      <div v-else class=\"flex flex-col with-large my-auto text-center py-20\">\r\n        <h1 class=\"\">No results</h1>\r\n        <p>OOPS! Something went wrong here</p>\r\n      </div>\r\n    </div>\r\n  </Layout>\r\n</template>\r\n<page-query>\r\n\r\nquery ($private: Int){\r\n  projects: allProject (filter: { private: { ne: $private }, tags: { id: {in: [\"farming\"]}}}){   \r\n    edges {\r\n        node {\r\n                id\r\n          title\r\n          path\r\n          members {\r\n            id\r\n          name\r\n          image(width:64, height:64, fit:inside)\r\n          path\r\n      }\r\n        rank\r\n        linkedin\r\n        \r\n        humanTime : created(format:\"DD MMMM YYYY\")\r\n        datetime : created(format:\"ddd MMM DD YYYY hh:mm:ss zZ\")\r\n        status\r\n        excerpt\r\n        image(width:800)\r\n        path\r\n        timeToRead\r\n        authors {\r\n          id\r\n          \r\n          image(width:64, height:64, fit:inside)\r\n          path\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  people: allPerson(filter: { private: { ne: $private }, memberships: { id: {in: [\"foundation\", \"tech\"]}}}) {   \r\n     edges {\r\n      node {\r\n        id\r\n        path\r\n        excerpt\r\n        content\r\n        name\r\n        rank\r\n         memberships{\r\n          id\r\n          title\r\n          path\r\n        }\r\n        bio\r\n        linkedin\r\n        websites\r\n        countries\r\n        cities\r\n        image(width:800)\r\n        private\r\n      }\r\n    }\r\n  }\r\n\r\n  blogs: allBlog {\r\n    edges {\r\n      node {\r\n        id\r\n        title\r\n        image(width:800)\r\n        path\r\n        humanTime : created(format:\"DD MMM YYYY\")\r\n        datetime : created\r\n        authors {\r\n          id\r\n          name\r\n          image(width:64, height:64, fit:inside)\r\n          path\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  markdowns: allMarkdownPage{\r\n    edges{\r\n      node{\r\n        __typename\r\n        header_title\r\n        header_excerpt\r\n        path\r\n      #  title\r\n        excerpt\r\n      }      \r\n    }\r\n  }\r\n}\r\n\r\n</page-query>\r\n\r\n<script>\r\nimport SearchListItem from \"~/components/custom/Cards/SearchListItem.vue\";\r\n\r\nexport default {\r\n  metaInfo: {\r\n    title: \"Search\",\r\n  },\r\n  data: () => ({\r\n    q: \"\",\r\n    objects: {},\r\n    loading: true,\r\n  }),\r\n  computed: {\r\n    searchResults() {\r\n      const searchTerm = this.q;\r\n      if (!searchTerm || searchTerm.length < 3) return [];\r\n      var searchRes = this.$search.search({ query: searchTerm, limit: 100 });\r\n      var result = [];\r\n      for (var i = 0; i < searchRes.length; i++) {\r\n        var item = searchRes[i];\r\n        result.push({ node: this.objects[item.path] });\r\n      }\r\n      return result;\r\n    },\r\n    contentHeight() {\r\n      if (process.isClient) {\r\n        return window.innerHeight - 128;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.q = new URL(location.href).searchParams.get(\"query\");\r\n\r\n    for (var i = 0; i < this.$page.projects.edges.length; i++) {\r\n      var item = this.$page.projects.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    for (var i = 0; i < this.$page.people.edges.length; i++) {\r\n      var item = this.$page.people.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    for (var i = 0; i < this.$page.blogs.edges.length; i++) {\r\n      var item = this.$page.blogs.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    for (var i = 0; i < this.$page.markdowns.edges.length; i++) {\r\n      var item = this.$page.markdowns.edges[i];\r\n      this.objects[item.node.path] = item.node;\r\n    }\r\n\r\n    this.loading = false;\r\n  },\r\n  components: {\r\n    SearchListItem,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  font-size: 3rem;\r\n}\r\n</style>\r\n"]}]}