{"remainingRequest":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/babel-loader/lib/index.js??ref--1-1!/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/src/components/custom/ThemeSwitcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/src/components/custom/ThemeSwitcher.vue","mtime":1658143774000},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ehab/codewww/github/threefoldfoundation/www_climate_action_project/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":["let themes = ['light', 'dark'];\nexport default {\n  props: {\n    theme: {\n      type: String\n    }\n  },\n  computed: {\n    nextTheme() {\n      const currentIndex = themes.indexOf(this.theme);\n      const nextIndex = (currentIndex + 1) % themes.length;\n      return themes[nextIndex];\n    }\n\n  },\n  methods: {\n    toggleTheme() {\n      const currentIndex = themes.indexOf(this.theme);\n      const nextIndex = (currentIndex + 1) % themes.length;\n\n      window.__setPreferredTheme(themes[nextIndex]);\n\n      this.$emit('setTheme', themes[nextIndex]);\n    }\n\n  },\n\n  async mounted() {\n    // set default\n    if (typeof window.__theme !== 'undefined') this.$emit('setTheme', window.__theme);\n  }\n\n};",{"version":3,"mappings":"AAaA;AAEA;EACAA;IACAC;MACAC;IADA;EADA,CADA;EAOAC;IACAC;MACA;MACA;MACA;IACA;;EALA,CAPA;EAcAC;IACAC;MACA;MACA;;MACAC;;MAEA;IACA;;EAPA,CAdA;;EAuBA;IACA;IACA;EACA;;AA1BA","names":["props","theme","type","computed","nextTheme","methods","toggleTheme","window"],"sourceRoot":"src/components/custom","sources":["ThemeSwitcher.vue"],"sourcesContent":["<template>\r\n  <a role=\"button\" @click.prevent=\"toggleTheme()\"  \r\n      :aria-label=\"'Toggle ' + nextTheme\" \r\n      :title=\"'Toggle ' + nextTheme\"\r\n      class=\"toggle-theme\"\r\n    >\r\n    \r\n    <font-awesome :icon=\"['fas', 'sun']\" class=\"mr-3\" v-if=\"theme === 'dark'\"></font-awesome>\r\n    <font-awesome :icon=\"['fas', 'moon']\" class=\"mr-3\" v-if=\"theme === 'light'\"></font-awesome>\r\n  </a>\r\n</template>\r\n\r\n<script>\r\nlet themes = ['light', 'dark']\r\n\r\nexport default {\r\n  props: {\r\n    theme: {\r\n      type: String,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    nextTheme() {\r\n      const currentIndex = themes.indexOf(this.theme)\r\n      const nextIndex = (currentIndex + 1) % themes.length\r\n      return themes[nextIndex]\r\n    }\r\n  },\r\n  methods: {\r\n    toggleTheme() {\r\n      const currentIndex = themes.indexOf(this.theme);\r\n      const nextIndex = (currentIndex + 1) % themes.length;\r\n      window.__setPreferredTheme(themes[nextIndex])\r\n\r\n      this.$emit('setTheme', themes[nextIndex])\r\n    }\r\n  },\r\n  async mounted() {\r\n    // set default\r\n    if (typeof window.__theme !== 'undefined') this.$emit('setTheme', window.__theme)\r\n  }\r\n}\r\n</script>"]}]}